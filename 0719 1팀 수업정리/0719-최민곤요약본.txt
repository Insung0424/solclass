BoardForm.jsp

1. 작성자, 제목, 이메일, 비밀번호, 글내용을 입력받아서 submit을 누르면 BoardWriteForm으로 보냄.

2. 전체글보기 버튼을 누르면 onclick="location.href=''"를 통해 BoardList로 넘어감.


BoardWriteForm.jsp

1. BoardForm에서 받아온 데이터를 utf-8로 인코딩하여 자바빈클래스에 세팅함.

2. 데이터베이스를 담당하는 BoardDAO 클래스의 데이터를 저장하는 insertBoard메소드를 호출하여 자바빈의 데이터를 리턴받아 BoardList.jsp로 강제 이동함.


BoardList.jsp 


1. 게시글을 10개를 기준으로 재단하여 리턴을 받아오는 allBoard메소드로 Vector를 이용해 폼에 출력함.

2. 게시글을 클릭하면 앵커태그를 통해 자바빈에서 getNum메소드를 통해 게시글번호 데이터를 갖고 BoardIn.jsp로 넘어감.


BoardBean.java 

1. 자바빈클래스는 정보의 은닉을 위해 변수를 private로 설정함.

2. getter setter를 이용해 입력받은 데이터를 DB로 보낼 수 있도록 세팅하거나 추출할 수 있도록 만드는 DB와 페이지의 중간 교류역할을 담당함.


BoardIn.jsp

1. BoardList에서 클릭한 게시글의 번호를 받아 해당 글의 내용을 읽을 수 있게 만든 oneBoard메소드를 호출함.

2.  댓글쓰기, 수정, 삭제, 목록은 location.href를 통해 해당 기능을 구현한 폼으로 넘어감.


DeleteForm.jsp

1. BoardList에서 클릭한 게시글의 번호를 받아 해당 글의 내용을 자바빈에 세팅하는 oneUpdateBoard메소드를 호출함.

2. 세팅한 각 데이터들을 폼에 넣고 submit을 누르면 DeleteProc.jsp로 보냄.


DeleteProc.jsp

1. DeleteForm에서 작성한 패스워드와 기존의 패스워드값을 비교하여 맞다면 삭제한 후 BoardList로 보냄.

2. 아니라면 스크립트를 통해 패스워드를 확인하라는 메세지를 띄운 후, 전 화면으로 돌아감.


ReWriteForm.jsp

1. 댓글작성 폼.

2. 인풋 타입 히든을 통해 사용자의 눈에는 보이지 않지만 현재의 값을 보존함.


ReWriteProc.jsp

1. ReWriteForm에서 받아온 데이터를 utf-8로 인코딩하여 자바빈에 세팅.

2. BoardDAO의 reWriteBoard메소드를 통해 댓글 데이터를 모두 저장하고 전체 게시글 보기로 넘어감.


UpdateForm.jsp

1. 수정 버튼을 누르면 수정된 데이터를 갖고 UpdateProc.jsp로 넘어감.


UpdateProc.jsp

1. UpdateForm에서 가져온 데이터를 utf-8로 인코딩하여 자바빈에 세팅

2. BoardDAO의 getPass메소드를 통해 해당 게시글의 패스워드 값을 가져옴.

3. if(pass.equals(boardbean.getPassword())를 통해 기존 패스워드 값과 UpdateForm에서 작성했던

password 값이 같은지 비교하여, 같다면 uipdateBoard메소드를 호출하여 데이터를 수정한 뒤

전체 게시글로 넘어가게됨.

4. 다르다면 패스워드가 일치하지 않는다는 메세지 출력 후, 전 페이지로 넘어감



BoardDAO.java


1.데이터베이스 연결과 여러 쿼리를 담당하는 클래스


2. insertBoard는 가장 큰 ref값을 읽어와 그 값의 1을 더해 게시글번호가 출력, 
게시글이 작성될 수 있도록 하는 메소드.


3. allBoard는 Vector를 통해 배열형태로 차례대로 입력받아 테이블에 입력되어있던 정보를

start와 end 변수를 기준으로 조회 한 후, 그 데이터를 자바빈에 세팅한 후 그 자바빈을 벡터에 삽입한 
후에 그 벡터를 return하는 메소드..


4. getAllCount 메소드는 게시글의 모든 갯수를 조회한 후 반환하는 메소드.


5. oneBoard 메소드는 게시글번호를 기준으로 클릭한 게시글의 조회수를 1올리는 쿼리문과,

게시글번호 기준으로 게시글의 정보를 모두 조회하여 자바빈에 세팅한 후 반환하는 메소드.


6. reWriteBoard 메소드는 부모글의 ref와 re_step,re_level을 읽어온 뒤, 부모글보다 큰 re_level의 값
을 1증가시키는 쿼리와 댓글 데이터를 저장하는 쿼리로 이루어져 있음.

댓글 데이터를 저장하는 쿼리는 자바빈에서 추출하여 바인드변수에 세팅함.


7. oneUpdateBoard 메소드는 게시글번호를 기준으로 모든 정보를 조회하여 조회한 데이터를 자바빈에 세팅 한후 자바빈을 반환하는 메소드.


8. getPass메소드는 해당 게시글의 패스워드를 반환받는 메소드.


9. updateBoard메소드는 해당 게시글의 제목과 글내용을 수정하는 메소드.


10.deleteBoard메소드는 해당 게시글을 삭제하는 메소드.